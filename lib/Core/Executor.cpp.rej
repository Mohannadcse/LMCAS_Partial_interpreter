diff a/lib/Core/Executor.cpp b/lib/Core/Executor.cpp	(rejected hunks)
@@ -442,7 +442,7 @@ Executor::Executor(LLVMContext &ctx, const InterpreterOptions &opts,
       atMemoryLimit(false), inhibitForking(false), haltExecution(false),
       ivcEnabled(false), debugLogBuffer(debugBufferString) {
 
-
+    	  llvm::outs() << "*** INSIDE Executor::Executor" <<"\n";
   const time::Span maxTime{MaxTime};
   if (maxTime) timers.add(
         std::make_unique<Timer>(maxTime, [&]{
@@ -1622,6 +1622,7 @@ Function* Executor::getTargetFunction(Value *calledVal, ExecutionState &state) {
 
 void Executor::executeInstruction(ExecutionState &state, KInstruction *ki) {
   Instruction *i = ki->inst;
+  kmodule->visitedBBs.insert(i->getParent());
   switch (i->getOpcode()) {
     // Control flow
   case Instruction::Ret: {
@@ -3055,13 +3056,16 @@ void Executor::terminateStateEarly(ExecutionState &state,
       (AlwaysOutputSeeds && seedMap.count(&state)))
     interpreterHandler->processTestCase(state, (message + "\n").str().c_str(),
                                         "early");
+
   terminateState(state);
 }
 
 void Executor::terminateStateOnExit(ExecutionState &state) {
+	llvm::outs() << "*** INSIDE Executor::terminateStateOnExit" <<"\n";
   if (!OnlyOutputStatesCoveringNew || state.coveredNew || 
       (AlwaysOutputSeeds && seedMap.count(&state)))
     interpreterHandler->processTestCase(state, 0, 0);
+
   terminateState(state);
 }
 
